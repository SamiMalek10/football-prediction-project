#!/bin/bash
echo "üöÄ D√©marrage de l'√©cosyst√®me Big Data..."

# V√©rification des variables
source ~/.bashrc
cd ~/Desktop/football_prediction_project || { echo "‚ùå R√©pertoire incorrect"; exit 1; }

# D√©marrer HDFS
echo "D√©marrage HDFS..."
$HADOOP_HOME/sbin/start-dfs.sh

# D√©marrer YARN
echo "D√©marrage YARN..."
$HADOOP_HOME/sbin/start-yarn.sh

# D√©marrer Zookeeper avec v√©rification
echo "D√©marrage Zookeeper..."
$KAFKA_HOME/bin/zookeeper-server-start.sh -daemon $KAFKA_HOME/config/zookeeper.properties
sleep 10  # Augmenter le temps d'attente

# V√©rifier que Zookeeper est actif
if ! nc -z localhost 2181; then
    echo "‚ùå √âchec du d√©marrage de Zookeeper"
    exit 1
fi

# D√©marrer Kafka avec v√©rification
echo "D√©marrage Kafka..."
$KAFKA_HOME/bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties
sleep 15  # Augmenter le temps d'attente

# V√©rifier que Kafka est actif
if ! nc -z localhost 9092; then
    echo "‚ùå √âchec du d√©marrage de Kafka"
    exit 1
fi


# Remplacer la partie cr√©ation de topic par :
if ! $KAFKA_HOME/bin/kafka-topics.sh --list --bootstrap-server localhost:9092 | grep -q "players-data"; then
    echo "Cr√©ation du topic Kafka..."
    $KAFKA_HOME/bin/kafka-topics.sh --create \
        --topic players-data \
        --bootstrap-server 127.0.0.1:9092 \
        --partitions 3 \
        --replication-factor 1
else
    echo "Topic Kafka 'players-data' existe d√©j√†"
fi


# D√©marrer Spark
echo "D√©marrage Spark..."
$SPARK_HOME/sbin/start-master.sh
$SPARK_HOME/sbin/start-worker.sh spark://localhost:7077

echo "‚úÖ Services d√©marr√©s avec succ√®s"
echo "üåê Interfaces:"
echo "HDFS: http://localhost:9870"
echo "Spark: http://localhost:8080"
